// automatically generated by Xtext
grammar fr.diverse.moda.Moda with org.eclipse.xtext.common.Terminals

import "http://www.diverse.fr/moda" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

MODAModel returns MODAModel:
	{MODAModel}
	'MODAModel'
	name=EString
	'{'
		('model' '{' model+=Model ( "," model+=Model)* '}' )?
		('data' '{' data+=Data ( "," data+=Data)* '}' )?
		('software' software=RunningSoftware)?
		('sts' sts=STS)?
		('relation' '{' modarelation+=MODARelation ( "," modarelation+=MODARelation)* '}' )?
	'}';

MODAElement returns MODAElement:
	Model | Data | RunningSoftware | STS;

Model returns Model:
	{Model}
	name=EString (kind=ModelKind) ('"'description=EString'"')?
		// ('outgoing' '(' outgoing+=[MODARelation|EString] ( "," outgoing+=[MODARelation|EString])* ')' )?
		// ('incoming' '(' incoming+=[MODARelation|EString] ( "," incoming+=[MODARelation|EString])* ')' )?
	;

Data returns Data:
	{Data}
	name=EString (kind=DataKind) ('"'description=EString'"')?
		//('outgoing' '(' outgoing+=[MODARelation|EString] ( "," outgoing+=[MODARelation|EString])* ')' )?
		//('incoming' '(' incoming+=[MODARelation|EString] ( "," incoming+=[MODARelation|EString])* ')' )?
	;

RunningSoftware returns RunningSoftware:
	{RunningSoftware}
	name=EString
		//('outgoing' '(' outgoing+=[MODARelation|EString] ( "," outgoing+=[MODARelation|EString])* ')' )?
		//('incoming' '(' incoming+=[MODARelation|EString] ( "," incoming+=[MODARelation|EString])* ')' )?
	;

STS returns STS:
	{STS}
	name=EString
		//('outgoing' '(' outgoing+=[MODARelation|EString] ( "," outgoing+=[MODARelation|EString])* ')' )?
		//('incoming' '(' incoming+=[MODARelation|EString] ( "," incoming+=[MODARelation|EString])* ')' )?
	;

MODARelation returns MODARelation:
	{MODARelation}
	name=EString (kind=RelationKind) (src=[MODAElement|EString]) '->' ('tgt' tgt=[MODAElement|EString])
	;

EString returns ecore::EString:
	STRING | ID;

enum ModelKind returns ModelKind:
				prescriptive = 'prescriptive' | predictive = 'predictive' | descriptive = 'descriptive';

enum DataKind returns DataKind:
				input = 'input' | output = 'output' | external = 'external' | measured = 'measured';

enum RelationKind returns RelationKind:
				generation = 'generation' | enactment = 'enactment' | deployment = 'deployment' | input = 'input' | output = 'output' | measurement = 'measurement' | otherInterplay = 'otherInterplay' | generalization = 'generalization' | preparation = 'preparation' | analysis = 'analysis';
